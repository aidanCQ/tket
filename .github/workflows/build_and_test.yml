name: Build and test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - ae/test-win194
  schedule:
    # 03:00 every Saturday morning
    - cron: '0 3 * * 6'
  workflow_dispatch: {}

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_test_tket_windows:
    name: Build and test (tket)
    strategy:
      matrix:
        os: ['windows-2022']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Select Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install conan
        uses: turtlebrowser/get-conan@v1.2
      - name: Set up conan
        shell: bash
        run: |
          conan profile detect
          DEFAULT_PROFILE_PATH=`conan profile path default`
          PROFILE_PATH=./conan-profiles/${{ matrix.os }}
          diff ${DEFAULT_PROFILE_PATH} ${PROFILE_PATH} || true
          cp ${PROFILE_PATH} ${DEFAULT_PROFILE_PATH}
          conan remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs --index 0
      - name: normalize line endings in conanfile and src directory
        # This is necessary to ensure consistent revisions across platforms.
        # Conan's revision hash is composed of hashes of all the exported files,
        # so we must normalize the line endings in these.
        run: |
          $tket_files = Get-ChildItem "tket" -File -Recurse
          foreach ($f in $tket_files) {
            $normalized_file = [IO.File]::ReadAllText($f) -replace "`r`n", "`n"
            [IO.File]::WriteAllText($f, $normalized_file)
          }
      - name: ninja ccache setup
        # This is what hendrikmuhs/ccache-action does, but for windows (theirs is buggy on windows)
        id: ninja-ccache-setup
        run: |
          choco upgrade ccache ninja
          $ccache_dir = ccache --get-config cache_dir
          echo ccache_dir=$ccache_dir >> $env:GITHUB_OUTPUT
          ccache --set-config=max_size='500M'
          ccache --set-config=compression=true
          ccache --set-config compiler_check=content
          ccache --set-config namespace=WITH_TESTS
          ccache -p
      - name: Get current time
        uses: josStorer/get-current-time@v2.1.2
        id: current_time
        with:
          format: YYYYMMDDHHmmss
      - name: ccache windows
        uses: actions/cache@v4
        with:
          path: ${{ steps.ninja-ccache-setup.outputs.ccache_dir }}
          key: tket-static-${{ matrix.os }}-${{ steps.current_time.outputs.formattedTime }}
          restore-keys: |
            tket-static-${{ matrix.os }}-
      - name: Build tket
        # On windows use build + export-pkg so build directory is consistent across runs (i.e. don't build from conan cache)
        # Necessary because setting ccache base_dir doesn't currently work on windows
        run: |
          conan build tket --user=tket --channel=stable -o boost/*:header_only=True -o with_all_tests=True -c tools.cmake.cmaketoolchain:generator=Ninja
          conan export-pkg tket --user=tket --channel=stable -o boost/*:header_only=True -o with_all_tests=True -c tools.cmake.cmaketoolchain:generator=Ninja
      - name: ccache stats
        run: |
          ccache -s  #show stats
          ccache -z  #show stats

  build_test_pytket_windows:
    name: Build and test pytket (windows)
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
    - name: Select Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install conan
      uses: turtlebrowser/get-conan@v1.2
    - name: Set up conan
      shell: bash
      run: |
        conan profile detect
        DEFAULT_PROFILE_PATH=`conan profile path default`
        PROFILE_PATH=./conan-profiles/windows-2022
        diff ${DEFAULT_PROFILE_PATH} ${PROFILE_PATH} || true
        cp ${PROFILE_PATH} ${DEFAULT_PROFILE_PATH}
        conan remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs --index 0
    - name: normalize line endings in conanfile and src directory
      # This is necessary to ensure consistent revisions across platforms.
      # Conan's revision hash is composed of hashes of all the exported files,
      # so we must normalize the line endings in these.
      run: |
             $tket_files = Get-ChildItem "tket" -File -Recurse
             foreach ($f in $tket_files) {
             $normalized_file = [IO.File]::ReadAllText($f) -replace "`r`n", "`n"
             [IO.File]::WriteAllText($f, $normalized_file)
             }
    - name: ccache setup
        # This is what hendrikmuhs/ccache-action does, but for windows (theirs is buggy on windows)
      id: ccache-setup
      run: |
        choco upgrade ccache
        $ccache_dir = ccache --get-config cache_dir
        echo ccache_dir=$ccache_dir >> $env:GITHUB_OUTPUT
        ccache --set-config=max_size='500M'
        ccache --set-config=compression=true
        ccache --set-config compiler_check=content
        ccache --set-config namespace=WITH_TESTS
        ccache -p
    - name: Get current time
      uses: josStorer/get-current-time@v2.1.2
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: ccache windows
      uses: actions/cache@v4
      with:
        path: ${{ steps.ccache-setup.outputs.ccache_dir }}
        key: tket-dynamic-visual-studio-windows-2022-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          tket-dynamic-visual-studio-windows-2022
    - name: get ccache path
      id: ccache-path
      shell: bash
      run: |
        ccache --shimgen-noop > ccache-info.txt || true
        a=$(cat ccache-info.txt | grep executable)
        # strip off the initial "  path to executable: "
        b=${a:22}
        echo "ccache_path=${b}" >> $GITHUB_OUTPUT
    - name: Build tket
      run: |
        $env:TKET_VSGEN_CCACHE_EXE = '${{ steps.ccache-path.outputs.ccache_path }}'
        conan build tket --user tket --channel stable -o boost/*:header_only=True -o tklog/*:shared=True -o tket/*:shared=True
        conan export-pkg tket --user tket --channel stable -o boost/*:header_only=True -o tklog/*:shared=True -o tket/*:shared=True -tf ""
    - name: Install pytket requirements
      run: |
        conan create recipes/pybind11
        conan create recipes/pybind11_json/all --version 0.2.14
    - name: Set up Python 3.10
      if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Set up Python 3.11
      if: github.event_name == 'push'
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Set up Python 3.12
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Build pytket
      run: |
        cd pytket
        pip install -e .[ZX] -v
    - name: Run doctests
      run: |
        cd pytket
        pip install pytest
        pytest --doctest-modules pytket
    - name: Test pytket
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/
    - name: ccache stats
      run: |
        ccache -s  #show stats
        ccache -z  #show stats
